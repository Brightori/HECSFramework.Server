using Components;using HECSFramework.Core;using MessagePack;[Union(0, typeof(ActorContainerIDResolver))][Union(1, typeof(ConnectionsHolderComponentResolver))][Union(2, typeof(LocationComponentResolver))][Union(3, typeof(ClientIDHolderComponentResolver))][Union(4, typeof(NetworkComponentsHolderResolver))][Union(5, typeof(ServerTagComponentResolver))][Union(6, typeof(SyncEntitiesHolderComponentResolver))][Union(7, typeof(WorldSliceIndexComponentResolver))]public partial interface IData { }namespace HECSFramework.Core{	public partial class ResolversMap	{		public ResolversMap()		{			GetComponentContainerFunc = GetContainerForComponentFuncProvider;			ProcessResolverContainer = ProcessResolverContainerRealisation;			GetComponentFromContainer = GetComponentFromContainerFuncRealisation;		}		partial void LoadDataFromContainerSwitch(ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.Type)			{				case 0:					ProcessComponents(ref dataContainerForResolving, worldIndex);					break;			}		}		private ResolverDataContainer GetContainerForComponentFuncProvider<T>(T component) where T: IComponent		{			switch (component.GetTypeHashCode)			{				case 107601317:					var actorcontaineridresolver = component as ActorContainerID;					var ActorContainerIDData = new ActorContainerIDResolver().In(ref actorcontaineridresolver);					return PackComponentToContainer(component, ActorContainerIDData);				case 181847649:					var connectionsholdercomponentresolver = component as ConnectionsHolderComponent;					var ConnectionsHolderComponentData = new ConnectionsHolderComponentResolver().In(ref connectionsholdercomponentresolver);					return PackComponentToContainer(component, ConnectionsHolderComponentData);				case 121100508:					var locationcomponentresolver = component as LocationComponent;					var LocationComponentData = new LocationComponentResolver().In(ref locationcomponentresolver);					return PackComponentToContainer(component, LocationComponentData);				case 155175405:					var clientidholdercomponentresolver = component as ClientIDHolderComponent;					var ClientIDHolderComponentData = new ClientIDHolderComponentResolver().In(ref clientidholdercomponentresolver);					return PackComponentToContainer(component, ClientIDHolderComponentData);				case 163302026:					var networkcomponentsholderresolver = component as NetworkComponentsHolder;					var NetworkComponentsHolderData = new NetworkComponentsHolderResolver().In(ref networkcomponentsholderresolver);					return PackComponentToContainer(component, NetworkComponentsHolderData);				case 127457553:					var servertagcomponentresolver = component as ServerTagComponent;					var ServerTagComponentData = new ServerTagComponentResolver().In(ref servertagcomponentresolver);					return PackComponentToContainer(component, ServerTagComponentData);				case 189120713:					var syncentitiesholdercomponentresolver = component as SyncEntitiesHolderComponent;					var SyncEntitiesHolderComponentData = new SyncEntitiesHolderComponentResolver().In(ref syncentitiesholdercomponentresolver);					return PackComponentToContainer(component, SyncEntitiesHolderComponentData);				case 167365335:					var worldsliceindexcomponentresolver = component as WorldSliceIndexComponent;					var WorldSliceIndexComponentData = new WorldSliceIndexComponentResolver().In(ref worldsliceindexcomponentresolver);					return PackComponentToContainer(component, WorldSliceIndexComponentData);			}			return default;		}		private void ProcessComponents(ref ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 107601317:					var ActorContainerIDresolver = (ActorContainerIDResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfActorContainerID))					{						var ActorContainerIDcomponent = (ActorContainerID)entityOfActorContainerID.GetActorContainerID();						ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					}					break;				case 181847649:					var ConnectionsHolderComponentresolver = (ConnectionsHolderComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfConnectionsHolderComponent))					{						var ConnectionsHolderComponentcomponent = (ConnectionsHolderComponent)entityOfConnectionsHolderComponent.GetConnectionsHolderComponent();						ConnectionsHolderComponentresolver.Out(ref ConnectionsHolderComponentcomponent);					}					break;				case 121100508:					var LocationComponentresolver = (LocationComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfLocationComponent))					{						var LocationComponentcomponent = (LocationComponent)entityOfLocationComponent.GetLocationComponent();						LocationComponentresolver.Out(ref LocationComponentcomponent);					}					break;				case 155175405:					var ClientIDHolderComponentresolver = (ClientIDHolderComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfClientIDHolderComponent))					{						var ClientIDHolderComponentcomponent = (ClientIDHolderComponent)entityOfClientIDHolderComponent.GetClientIDHolderComponent();						ClientIDHolderComponentresolver.Out(ref ClientIDHolderComponentcomponent);					}					break;				case 163302026:					var NetworkComponentsHolderresolver = (NetworkComponentsHolderResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfNetworkComponentsHolder))					{						var NetworkComponentsHoldercomponent = (NetworkComponentsHolder)entityOfNetworkComponentsHolder.GetNetworkComponentsHolder();						NetworkComponentsHolderresolver.Out(ref NetworkComponentsHoldercomponent);					}					break;				case 127457553:					var ServerTagComponentresolver = (ServerTagComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfServerTagComponent))					{						var ServerTagComponentcomponent = (ServerTagComponent)entityOfServerTagComponent.GetServerTagComponent();						ServerTagComponentresolver.Out(ref ServerTagComponentcomponent);					}					break;				case 189120713:					var SyncEntitiesHolderComponentresolver = (SyncEntitiesHolderComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSyncEntitiesHolderComponent))					{						var SyncEntitiesHolderComponentcomponent = (SyncEntitiesHolderComponent)entityOfSyncEntitiesHolderComponent.GetSyncEntitiesHolderComponent();						SyncEntitiesHolderComponentresolver.Out(ref SyncEntitiesHolderComponentcomponent);					}					break;				case 167365335:					var WorldSliceIndexComponentresolver = (WorldSliceIndexComponentResolver)(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfWorldSliceIndexComponent))					{						var WorldSliceIndexComponentcomponent = (WorldSliceIndexComponent)entityOfWorldSliceIndexComponent.GetWorldSliceIndexComponent();						WorldSliceIndexComponentresolver.Out(ref WorldSliceIndexComponentcomponent);					}					break;			}		}		private IComponent GetComponentFromContainerFuncRealisation(ResolverDataContainer resolverDataContainer)		{			switch (resolverDataContainer.TypeHashCode)			{				case 107601317:					var ActorContainerIDnew = new ActorContainerID();					var ActorContainerIDdata = (ActorContainerIDResolver)(resolverDataContainer.Data);					ActorContainerIDdata.Out(ref ActorContainerIDnew);					return ActorContainerIDnew;				case 181847649:					var ConnectionsHolderComponentnew = new ConnectionsHolderComponent();					var ConnectionsHolderComponentdata = (ConnectionsHolderComponentResolver)(resolverDataContainer.Data);					ConnectionsHolderComponentdata.Out(ref ConnectionsHolderComponentnew);					return ConnectionsHolderComponentnew;				case 121100508:					var LocationComponentnew = new LocationComponent();					var LocationComponentdata = (LocationComponentResolver)(resolverDataContainer.Data);					LocationComponentdata.Out(ref LocationComponentnew);					return LocationComponentnew;				case 155175405:					var ClientIDHolderComponentnew = new ClientIDHolderComponent();					var ClientIDHolderComponentdata = (ClientIDHolderComponentResolver)(resolverDataContainer.Data);					ClientIDHolderComponentdata.Out(ref ClientIDHolderComponentnew);					return ClientIDHolderComponentnew;				case 163302026:					var NetworkComponentsHoldernew = new NetworkComponentsHolder();					var NetworkComponentsHolderdata = (NetworkComponentsHolderResolver)(resolverDataContainer.Data);					NetworkComponentsHolderdata.Out(ref NetworkComponentsHoldernew);					return NetworkComponentsHoldernew;				case 127457553:					var ServerTagComponentnew = new ServerTagComponent();					var ServerTagComponentdata = (ServerTagComponentResolver)(resolverDataContainer.Data);					ServerTagComponentdata.Out(ref ServerTagComponentnew);					return ServerTagComponentnew;				case 189120713:					var SyncEntitiesHolderComponentnew = new SyncEntitiesHolderComponent();					var SyncEntitiesHolderComponentdata = (SyncEntitiesHolderComponentResolver)(resolverDataContainer.Data);					SyncEntitiesHolderComponentdata.Out(ref SyncEntitiesHolderComponentnew);					return SyncEntitiesHolderComponentnew;				case 167365335:					var WorldSliceIndexComponentnew = new WorldSliceIndexComponent();					var WorldSliceIndexComponentdata = (WorldSliceIndexComponentResolver)(resolverDataContainer.Data);					WorldSliceIndexComponentdata.Out(ref WorldSliceIndexComponentnew);					return WorldSliceIndexComponentnew;			}				return default;		}		private void ProcessResolverContainerRealisation(ref ResolverDataContainer dataContainerForResolving, ref IEntity entity)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 107601317:					var ActorContainerIDresolver = (ActorContainerIDResolver)dataContainerForResolving.Data;					var ActorContainerIDcomponent = (ActorContainerID)entity.GetActorContainerID();					ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					break;				case 181847649:					var ConnectionsHolderComponentresolver = (ConnectionsHolderComponentResolver)dataContainerForResolving.Data;					var ConnectionsHolderComponentcomponent = (ConnectionsHolderComponent)entity.GetConnectionsHolderComponent();					ConnectionsHolderComponentresolver.Out(ref ConnectionsHolderComponentcomponent);					break;				case 121100508:					var LocationComponentresolver = (LocationComponentResolver)dataContainerForResolving.Data;					var LocationComponentcomponent = (LocationComponent)entity.GetLocationComponent();					LocationComponentresolver.Out(ref LocationComponentcomponent);					break;				case 155175405:					var ClientIDHolderComponentresolver = (ClientIDHolderComponentResolver)dataContainerForResolving.Data;					var ClientIDHolderComponentcomponent = (ClientIDHolderComponent)entity.GetClientIDHolderComponent();					ClientIDHolderComponentresolver.Out(ref ClientIDHolderComponentcomponent);					break;				case 163302026:					var NetworkComponentsHolderresolver = (NetworkComponentsHolderResolver)dataContainerForResolving.Data;					var NetworkComponentsHoldercomponent = (NetworkComponentsHolder)entity.GetNetworkComponentsHolder();					NetworkComponentsHolderresolver.Out(ref NetworkComponentsHoldercomponent);					break;				case 127457553:					var ServerTagComponentresolver = (ServerTagComponentResolver)dataContainerForResolving.Data;					var ServerTagComponentcomponent = (ServerTagComponent)entity.GetServerTagComponent();					ServerTagComponentresolver.Out(ref ServerTagComponentcomponent);					break;				case 189120713:					var SyncEntitiesHolderComponentresolver = (SyncEntitiesHolderComponentResolver)dataContainerForResolving.Data;					var SyncEntitiesHolderComponentcomponent = (SyncEntitiesHolderComponent)entity.GetSyncEntitiesHolderComponent();					SyncEntitiesHolderComponentresolver.Out(ref SyncEntitiesHolderComponentcomponent);					break;				case 167365335:					var WorldSliceIndexComponentresolver = (WorldSliceIndexComponentResolver)dataContainerForResolving.Data;					var WorldSliceIndexComponentcomponent = (WorldSliceIndexComponent)entity.GetWorldSliceIndexComponent();					WorldSliceIndexComponentresolver.Out(ref WorldSliceIndexComponentcomponent);					break;			}		}	}}